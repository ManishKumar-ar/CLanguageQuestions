#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

void divis(int n)
{
    vector<int> vec;

    for (int i = 1; i <=sqrt(n); i++)                                             // with square root function
    {
        if (n % i == 0)
        {
            vec.push_back(i);

            if((n/i) != i)
            vec.push_back(n/i);
        }
    }

    sort(vec.begin(),vec.end());


    for( int i = 0 ; i< vec.size();i++)
    {
        cout<<vec[i]<<" ";
    }
}

int main()
{
    int n = 15;
    divis(n);
}

// output
// 1 3 5 15 

























///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

void divis(int n)
{
    vector<int> vec;

    for (int i = 1; i * i <= n; i++)                                      /// without square root
    {
        if (n % i == 0)
        {
            vec.push_back(i);

            if ((n / i) != i)
                vec.push_back(n / i);
        }
    }

    sort(vec.begin(), vec.end());

    for (int i = 0; i < vec.size(); i++)
    {
        cout << vec[i] << " ";
    }
}

int main()
{
    int n = 15;
    divis(n);
}

// output
// 1 3 5 15
