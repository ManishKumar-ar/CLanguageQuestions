#include <iostream>
#include <vector>

using namespace std;

vector<int> sieveOfEratosthenes(int n)
{
    vector<bool> isPrime(n + 1, true);
    vector<int> primes;

    isPrime[0] = isPrime[1] = false;

    for (int p = 2; p * p <= n; ++p)
    {
        // If isPrime[p] is still true, then p is a prime
        if (isPrime[p])
        {
            // Mark all multiples of p as false indicating not prime
            for (int i = p * p; i <= n; i += p)
            {
                isPrime[i] = false;
            }
        }
    }

    // Collecting all prime numbers
    for (int p = 2; p <= n; ++p)
    {
        if (isPrime[p])
        {
            primes.push_back(p);
        }
    }

    return primes;
}

int main()
{
    int n = 100; // You can change this to take user input if needed
    vector<int> primes = sieveOfEratosthenes(n);

    cout << "Prime numbers up to " << n << " are: ";
    for (int prime : primes)
    {
        cout << prime << " ";
    }
    cout << endl;

    return 0;
}


//output
// Prime numbers up to 100 are: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97
