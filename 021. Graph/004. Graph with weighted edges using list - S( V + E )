#include <iostream>
#include <vector>
using namespace std;
const int N = 1e3 + 10; // 10^3

vector<pair<int, int>> graph[N];

int main()
{
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= m; i++)
    {
        int v1, v2, wt;
        cin >> v1 >> v2 >> wt;
        graph[v2].push_back({v1, wt});
        graph[v1].push_back({v2, wt});
    }
    
    for (int i = 1; i <= n; i++)
    {
        cout << "Adjacent vertices of vertex " << i << ": ";
        for(int j = 0; j < graph[i].size(); j++) {
            cout << "(" << graph[i][j].first << ", " << graph[i][j].second << ") ";
        }
        cout << endl;
    }
    return 0;
}


// output
// 6 9
// 1 3 4
// 1 5 3
// 3 5 2
// 3 4 7
// 3 6 8
// 3 2 9
// 2 6 1
// 4 6 2
// 5 6 3
// Adjacent vertices of vertex 1: (3, 4) (5, 3)
// Adjacent vertices of vertex 2: (3, 9) (6, 1)
// Adjacent vertices of vertex 3: (1, 4) (5, 2) (4, 7) (6, 8) (2, 9) 
// Adjacent vertices of vertex 4: (3, 7) (6, 2)
// Adjacent vertices of vertex 5: (1, 3) (3, 2) (6, 3)
// Adjacent vertices of vertex 6: (3, 8) (2, 1) (4, 2) (5, 3) 
