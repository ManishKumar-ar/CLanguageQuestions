#include <iostream>
#include <vector>

using namespace std;

int main() {
    // Representing the graph as an adjacency list
    vector<vector<int>> adj = {
        {1, 2},     // Node 0
        {0, 2, 3},  // Node 1
        {0, 1, 3},  // Node 2
        {1, 2}      // Node 3
    };
    
    // Iterating through the adjacency list to print each edge
    for (int i = 0; i < adj.size(); ++i) {
        for (int j = 0; j < adj[i].size(); ++j) {
            int adjacentNode = adj[i][j];
            cout << "{ " << i << ", " << adjacentNode << " } ";
        }
        cout << endl;
    }
    
    return 0;
}







.............................................................................................................................


#include <iostream>
#include <vector>

using namespace std;

int main() {
    // Representing the graph as an adjacency list
    vector<vector<int>> adj = {
        {1, 2},     // Node 0
        {0, 2, 3},  // Node 1
        {0, 1, 3},  // Node 2
        {1, 2}      // Node 3
    };
    
    // Iterating through the adjacency list to print each edge
    for (int i = 0; i < adj.size(); ++i) {
        for (int adjacentNode : adj[i]) {
            cout << "{ " << i << ", " << adjacentNode << " } ";
        }
        cout << endl;
    }
    
    return 0;
}





































//////////////////////////////////////////////////////////////
7
7
3
7
8
9
2
1
2
4
