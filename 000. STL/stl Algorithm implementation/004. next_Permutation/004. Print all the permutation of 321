#include <iostream>
#include <array>
#include <algorithm>

using namespace std;

int main() {
    array<int, 3> arr = {3, 2, 1};
    sort(arr.begin(), arr.end());

    do {
        for (int i = 0; i < arr.size(); ++i) {
            cout << arr[i] << " ";
        }
        cout << endl;
    } while(next_permutation(arr.begin(), arr.end()));

    return 0;
}
//output
1 2 3 
1 3 2 
2 1 3 
2 3 1 
3 1 2 
3 2 1 



//Note -
//here time complexity is - 
//total permutation = 8 == n!
//sorting take == n*logn
//do-while loop run == n! times

//so  time complexity ==>  O(nlogn+nâ‹…n!)
//for large n values, nlogn is negigible. so time complexity is O( n * n!)


