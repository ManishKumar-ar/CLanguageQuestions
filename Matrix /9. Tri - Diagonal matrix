#include <iostream>
using namespace std;

class tridiagonalmatrix
{
    int size;
    int *A;

public:
    tridiagonalmatrix(int n)
    {
        this->size = n;
        A = new int[3 * size - 2];
    }

    void set(int i, int j, int x)
    {
        if (i == j)
        {
            int index = i - 1;
            A[index] = x;
        }
        else if (i - j == 1)
        {
            int index = size - 1 + i - 1;
            A[index] = x;
        }
        else if (i - j == -1)
        {
            int index = 2 * size - 1 + i - 1;
            A[index] = x;
        }
    }

    int get(int i, int j)
    {
        if (i == j)
        {
            int index = i - 1;
            return A[index];
        }
        else if (i - j == 1)
        {
            int index = size - 1 + i - 1;
            return A[index];
        }
        else if (i - j == -1)
        {
            int index = 2 * size - 1 + i - 1;
            return A[index];
        }
        return 0; // Added default return statement (it's up to you how you handle indices that don't match the conditions)
    }

    void display()
    {
        for (int i = 1; i <= size; i++)
        {
            for (int j = 1; j <= size; j++)
            {
                cout << get(i, j) << "  ";
            }
            cout << endl;
        }
    }
};

int main()
{
    int n = 5, x;
    tridiagonalmatrix sm(n);

    cout << "Enter the elements of the tridiagonal matrix : " << endl;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            cin >> x;
            sm.set(i, j, x);
        }
    }

    cout << "Tridiagonal matrix: " << endl;
    sm.display();

    return 0;
}


//output -------------------------------------------------------------------------------------------------------------------------------------------------------
Enter the elements of the tridiagonal matrix : 
1 2 3 4 5
9 8 7 5 6
9 5 2 5 3
1 7 8 5 5
7 8 5 2 1
Tridiagonal matrix:
1  2  0  0  0
9  8  7  0  0
0  5  2  5  0
0  0  8  5  5
0  0  0  2  1
