#include <iostream>
#include <queue>

using namespace std;

class Node
{
public:
    int data;
    Node *lchild;
    Node *rchild;

    Node(int data)
    {
        this->data = data;
        this->lchild = nullptr;
        this->rchild = nullptr;
    }
};

Node *root = nullptr;

void create()
{
    int data;
    queue<Node *> q;

    cout << "Enter root element: ";
    cin >> data;

    root = new Node(data);
    q.push(root);

    while (!q.empty())
    {
        Node *p = q.front();
        q.pop();

        cout << "Enter left child of " << p->data << ": ";
        cin >> data;
        if (data != -1)
        {
            p->lchild = new Node(data);
            q.push(p->lchild);
        }

        cout << "Enter right child of " << p->data << ": ";
        cin >> data;
        if (data != -1)
        {
            p->rchild = new Node(data);
            q.push(p->rchild);
        }
    }
}

void preorder(Node *p)
{
    if (p)
    {
        cout << p->data << " ";
        preorder(p->lchild);
        preorder(p->rchild);
    }
}

int main()
{
    create();
    cout << "Preorder traversal: ";
    preorder(root);
    cout << endl;
    return 0;
}


//output
// Enter root element: 50
// Enter left child of 50: 30
// Enter right child of 50: 60
// Enter left child of 30: -1
// Enter right child of 30: -1
// Enter left child of 60: 55
// Enter right child of 60: 65
// Enter left child of 55: -1
// Enter right child of 55: -1
// Enter left child of 65: -1
// Enter right child of 65: -1
// Preorder traversal: 50 30 60 55 65
