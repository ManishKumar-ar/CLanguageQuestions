#include <iostream>
#include <vector>
using namespace std;

class Node
{
public:
    int data;
    Node *next;
} *first = nullptr;

void create(const vector<int> A, Node *&first)
{
    if (A.empty())
        return;
    first = new Node;
    first->data = A[0];
    first->next = nullptr;

    Node *last;
    last = first;

    for (int i = 1; i < A.size(); i++)
    {
        Node *t = new Node;
        t->data = A[i];
        t->next = nullptr;
        last->next = t;
        last = t;
    }
}

int Search(int key)
{
    Node *p = first;

    while (p != NULL)
    {
        if (p->data == key)
            return 1;

        p = p->next;
    }
    return 0;
}

void Display(const Node *p)
{
    while (p != nullptr)
    {
        cout << p->data << "-> ";
        p = p->next;
    }
    cout << endl;
}

int main()
{
    vector<int> A = {3, 5, 20, 10, 15};

    create(A, first);
    Display(first);

    int key = 20;

    if (Search(key))
    {
        cout << "Key found in the linked list." << endl;
    }
    else
    {
        cout << "Key not found in the linked list." << endl;
    }
}

// output
// 3-> 5-> 20-> 10-> 15-> 
// Key found in the linked list.
