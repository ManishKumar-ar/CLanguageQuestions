
#include <iostream>
#include <vector>

using namespace std;

class Node
{
public:
    int data;
    Node *next;
};

Node *first = nullptr;

void create(const vector<int> A)
{
    if (A.empty())
        return;
    first = new Node;
    first->data = A[0];
    first->next = nullptr;

    Node *last;
    last = first;

    for (int i = 1; i < A.size(); i++)
    {
        Node *t = new Node;
        t->data = A[i];
        t->next = nullptr;
        last->next = t;
        last = t;
    }
}
void Insert(Node *p, int x)
{
    if (p == nullptr) // If the list is empty
    {
        p = new Node;
        p->data = x;
        p->next = nullptr;
        first = p;
    }
    else
    {
        while (p->next != nullptr) // Traverse to the end of the list
        {
            p = p->next;
        }
        Node *t = new Node; // Create a new node
        t->data = x;
        t->next = nullptr;
        p->next = t; // Insert the new node at the end
    }
}
void Display(const Node *p)
{
    while (p != nullptr)
    {
        cout << p->data << "-> ";
        p = p->next;
    }
    cout << endl;
}

int main()
{
    vector<int> A = {3, 5, 7, 10, 15};
    create(A);
    Insert(first, 100);
    Insert(first, 150);

    Display(first);

    return 0;
}

//output 
//3-> 5-> 7-> 10-> 15-> 100-> 150-> 
