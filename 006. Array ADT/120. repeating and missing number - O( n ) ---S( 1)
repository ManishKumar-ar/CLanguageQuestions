#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> findTwoElement(vector<int> arr, int n)
{
     
    long long SN = (n * (n + 1)) / 2;
    long long S2N = (n * (n + 1) * (2 * n + 1)) / 6;

 
    long long S = 0, S2 = 0;
    for (int i = 0; i < n; i++) {
        S += arr[i];
        S2 += (long long)arr[i] * (long long)arr[i];
    }

    //S-Sn = X-Y:
    long long val1 = S - SN;

    // S2-S2n = X^2-Y^2:
    long long val2 = S2 - S2N;

    //Find X+Y = (X^2-Y^2)/(X-Y):
    val2 = val2 / val1;

   
    long long x = (val1 + val2) / 2;
    long long y = x - val1;

    return {(int)x, (int)y};
}
int main()
{
    vector<int> nums = {1, 3, 3};
    vector<int> result = findTwoElement(nums, 3);

    for (auto x : result)
    {
        cout << x << " ";
    }
}

// output
// 3 2               /// 3 means the repeating element is is 3
                    /// the number that is missing, it was 2
