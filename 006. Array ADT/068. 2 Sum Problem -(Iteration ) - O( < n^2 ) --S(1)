//here the time complexity is sightly lower than the n^2

#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

vector<int> twoSum(vector<int> &nums, int target)
{
    int n  = nums.size();
    vector<int > ans;
    for( int i = 0;i<n;i++)
    {
        for( int j = i+1;j<n ;j++)
        {
            if(nums[i] + nums[j] == target)
            {
                 ans.push_back(i);
                 ans.push_back(j);
                 return ans;
            }
        }
    }



}
int main()
{
    vector<int> nums = {3,2,4};

    vector<int> result = twoSum(nums,6); 

    for( auto it: result)
    {
        cout<<it<<" ";
    }
    
}

// output
// 1 2
