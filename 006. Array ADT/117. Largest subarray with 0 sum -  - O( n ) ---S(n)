#include <iostream>
#include <vector>
#include<unordered_map>
using namespace std;

int maxLen(vector<int> &A)
{
    unordered_map<int, int> mpp;
    int maxi = 0;
    int sum = 0;
    int n = A.size();
    for (int i = 0; i < n; i++)
    {
        sum += A[i];
        if (sum == 0)
        {
            maxi = i + 1;
        }
        else
        {
            if (mpp.find(sum) != mpp.end())
            {
                maxi = max(maxi, i - mpp[sum]);
            }
            else
            {
                mpp[sum] = i;
            }
        }
    }

    return maxi;
}

int main()
{
    vector<int> nums = {15, -2, 2, -8, 1, 7, 10, 23};
    cout << maxLen(nums) << endl;
}

// output
// 5                that is  -2 2 -8 1 7.
