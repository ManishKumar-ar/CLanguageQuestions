#include <iostream>
#include <vector>
#include <map>
using namespace std;

int lenOfLongSubarr(int A[], int n, int k)
{
    map<long long, int> preSumMap;

    long long sum = 0;
    int maxLen = 0;

    for (int i = 0; i < n; i++)
    {
        sum += A[i];
        if (sum == k)
        {
            maxLen = max(maxLen, i + 1);
        }

        long long rem = sum - k;
        
        if (preSumMap.find(rem) != preSumMap.end())
        {
            int len = i - preSumMap[rem];
            maxLen = max(maxLen, len);
        }
        if (preSumMap.find(sum) == preSumMap.end())
        {
            preSumMap[sum] = i;
        }
    }

    return maxLen;
}
int main()
{
    int arr1[] = {10, 5, 2, 7, 1, 9};
    int result = lenOfLongSubarr(arr1, 6, 15);
    cout << result;

    return 0;
}
