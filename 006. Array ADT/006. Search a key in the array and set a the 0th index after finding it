// in this we search a key and after finding it we swap it with the 0th index element - this approach is said to be - front to head 

#include <iostream>
using namespace std;

class Array {
public:
    int A[10];
    int size;
    int length;

    Array(int arr[], int sz, int len) {
        size = sz;
        length = len;
        for (int i = 0; i < length; i++)
            A[i] = arr[i];
    }
};

void Display(Array arr) {
    cout << "\nElements are\n";
    for (int i = 0; i < arr.length; i++)
        cout << arr.A[i] << " ";
}

void swap(int *x, int *y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}

int LinearSearch(Array *arr, int key) {
    for (int i = 0; i < arr->length; i++) {
        if (key == arr->A[i]) {
            swap(&arr->A[i], &arr->A[0]);
            return i;
        }
    }
    return -1;
}

int main() {
    int arr[] = {2, 23, 14, 5, 6, 9, 8, 12};
    Array arr1(arr, 10, 8);
    cout << LinearSearch(&arr1, 14);
    Display(arr1);
    return 0;
}

//output
//2
//Elements are
//14 23 2 5 6 9 8 12
